# This is a basic workflow to help you get started with Actions

name: Autosync Global Develop Unification

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ developUnification ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
  
      - uses: actions/checkout@v2
        with:
          repository: RockwellAutomation/rockwell-aem-global
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          submodules: 'true'
          ref: develop
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world branch develop!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"
          git config pull.rebase true
          ls -la
          git submodule deinit -f rockwell-aem-unification
          rm -rf rockwell-aem-unification/
          rm -rf .git/modules/rockwell-aem-unification/
          git rm -r --cached rockwell-aem-unification
          ls -la
          pwd
          git submodule add -b developUnification https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/RockwellAutomation/rockwell-aem-unification.git
          git status
          cat .gitmodules
          cat .gitignore
          git add .
          git commit -m "move submodule to latest commit in develop"
          git push